#ifndef ACTION_MANAGER_H
#define ACTION_MANAGER_H

#include "utils.h"
#include "action.h"
#include "car_parameters.h"

/*
 * This action manager interface manages actions that are generated by the action manager according to some policy.
 * It is responsible for stepping the actions under its management every timestep.
 * The lifetime management of actions in unclear.
 * They may be discarded randomly on the judgement of the manager, or persist indefinitely as a NullAction.
 */
class ActionManager
{
public:
    virtual ~ActionManager();
    virtual void manage(std::unique_ptr<Action>&& action) = 0;
    virtual void step(float dt) = 0;
};

class BasicActionManager : public ActionManager
{
private:
    std::shared_ptr<CarParameters> params;
    std::unique_ptr<Action> action;

public:
    BasicActionManager(std::shared_ptr<CarParameters> params);
    void manage(std::unique_ptr<Action>&& action) override;
    void step(float dt) override;
};


#endif
